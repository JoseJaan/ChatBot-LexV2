{
  "E:\\ComputerScience\\Compass\\ProjetoSprint6&7\\sprints-6-7-pb-aws-abril\\api-tts": {
    "versionSfCore": null,
    "versionFramework": "4.1.11",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "api-tts",
            "frameworkVersion": "4.1.10",
            "plugins": [
              "serverless-dotenv-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "python3.9",
              "region": "us-east-1",
              "environment": {
                "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                "S3BUCKETNAME": "audios-sprint-6-7"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HealthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-health"
                    }
                  },
                  "V1DescriptionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
                    }
                  },
                  "PostLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-post"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "api-tts",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem",
                                  "dynamodb:GetItem",
                                  "dynamodb:Scan",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "api-tts",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "HealthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.health",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-health",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "HealthLogGroup"
                    ]
                  },
                  "V1DescriptionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.v1_description",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-v1Description",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "V1DescriptionLogGroup"
                    ]
                  },
                  "PostLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.post",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-post",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "PostLogGroup"
                    ]
                  },
                  "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "HealthLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "V1DescriptionLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PostLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-api-tts",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "HealthLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationHealth": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGet": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationHealth"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationHealth"
                  },
                  "V1DescriptionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationV1Description": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetV1": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /v1",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationV1Description"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationV1Description"
                  },
                  "PostLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationPost": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostV1Tts": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /v1/tts",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationPost"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationPost"
                  },
                  "CustomerTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "primary_key",
                          "AttributeType": "S"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "KeySchema": [
                        {
                          "AttributeName": "primary_key",
                          "KeyType": "HASH"
                        }
                      ],
                      "TableName": "api-tts-pollyPhrases-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "HealthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
                    }
                  },
                  "V1DescriptionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
                    }
                  },
                  "PostLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-PostLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "health": {
                "handler": "handler.health",
                "events": [
                  {
                    "httpApi": {
                      "path": "/",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/"
                  }
                ],
                "name": "api-tts-dev-health",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
              },
              "v1Description": {
                "handler": "handler.v1_description",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/v1"
                  }
                ],
                "name": "api-tts-dev-v1Description",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
              },
              "post": {
                "handler": "handler.post",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1/tts",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/v1/tts"
                  }
                ],
                "name": "api-tts-dev-post",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
              }
            },
            "resources": {
              "Resources": {
                "CustomerTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "primary_key",
                        "AttributeType": "S"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "KeySchema": [
                      {
                        "AttributeName": "primary_key",
                        "KeyType": "HASH"
                      }
                    ],
                    "TableName": "api-tts-pollyPhrases-dev"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "dotenv": {
                "path": ".env"
              }
            }
          },
          "configFileDirPath": "E:\\ComputerScience\\Compass\\ProjetoSprint6&7\\sprints-6-7-pb-aws-abril\\api-tts",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "api-tts",
            "frameworkVersion": "4.1.10",
            "plugins": [
              "serverless-dotenv-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "python3.9",
              "region": "us-east-1",
              "environment": {
                "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                "S3BUCKETNAME": "audios-sprint-6-7"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HealthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-health"
                    }
                  },
                  "V1DescriptionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
                    }
                  },
                  "PostLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-post"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "api-tts",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem",
                                  "dynamodb:GetItem",
                                  "dynamodb:Scan",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "api-tts",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "HealthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.health",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-health",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "HealthLogGroup"
                    ]
                  },
                  "V1DescriptionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.v1_description",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-v1Description",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "V1DescriptionLogGroup"
                    ]
                  },
                  "PostLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.post",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-post",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "PostLogGroup"
                    ]
                  },
                  "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "HealthLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "V1DescriptionLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PostLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-api-tts",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "HealthLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationHealth": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGet": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationHealth"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationHealth"
                  },
                  "V1DescriptionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationV1Description": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetV1": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /v1",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationV1Description"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationV1Description"
                  },
                  "PostLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationPost": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostV1Tts": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /v1/tts",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationPost"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationPost"
                  },
                  "CustomerTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "primary_key",
                          "AttributeType": "S"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "KeySchema": [
                        {
                          "AttributeName": "primary_key",
                          "KeyType": "HASH"
                        }
                      ],
                      "TableName": "api-tts-pollyPhrases-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "HealthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
                    }
                  },
                  "V1DescriptionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
                    }
                  },
                  "PostLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-PostLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "health": {
                "handler": "handler.health",
                "events": [
                  {
                    "httpApi": {
                      "path": "/",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/"
                  }
                ],
                "name": "api-tts-dev-health",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
              },
              "v1Description": {
                "handler": "handler.v1_description",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/v1"
                  }
                ],
                "name": "api-tts-dev-v1Description",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
              },
              "post": {
                "handler": "handler.post",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1/tts",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/v1/tts"
                  }
                ],
                "name": "api-tts-dev-post",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
              }
            },
            "resources": {
              "Resources": {
                "CustomerTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "primary_key",
                        "AttributeType": "S"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "KeySchema": [
                      {
                        "AttributeName": "primary_key",
                        "KeyType": "HASH"
                      }
                    ],
                    "TableName": "api-tts-pollyPhrases-dev"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "dotenv": {
                "path": ".env"
              }
            }
          },
          "configFileDirPath": "E:\\ComputerScience\\Compass\\ProjetoSprint6&7\\sprints-6-7-pb-aws-abril\\api-tts",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "api-tts",
            "frameworkVersion": "4.1.10",
            "plugins": [
              "serverless-dotenv-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "python3.9",
              "region": "us-east-1",
              "environment": {
                "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                "S3BUCKETNAME": "audios-sprint-6-7"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                }
              ],
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HealthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-health"
                    }
                  },
                  "V1DescriptionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
                    }
                  },
                  "PostLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-tts-dev-post"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "api-tts",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem",
                                  "dynamodb:GetItem",
                                  "dynamodb:Scan",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "api-tts",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "HealthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.health",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-health",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "HealthLogGroup"
                    ]
                  },
                  "V1DescriptionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.v1_description",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-v1Description",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "V1DescriptionLogGroup"
                    ]
                  },
                  "PostLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                      },
                      "Handler": "handler.post",
                      "Runtime": "python3.9",
                      "FunctionName": "api-tts-dev-post",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                          "S3BUCKETNAME": "audios-sprint-6-7"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "PostLogGroup"
                    ]
                  },
                  "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "HealthLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "V1DescriptionLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "PostLambdaFunction"
                      },
                      "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-api-tts",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "HealthLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationHealth": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "HealthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGet": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationHealth"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationHealth"
                  },
                  "V1DescriptionLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationV1Description": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "V1DescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetV1": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /v1",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationV1Description"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationV1Description"
                  },
                  "PostLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationPost": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "PostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostV1Tts": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /v1/tts",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationPost"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationPost"
                  },
                  "CustomerTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "primary_key",
                          "AttributeType": "S"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "KeySchema": [
                        {
                          "AttributeName": "primary_key",
                          "KeyType": "HASH"
                        }
                      ],
                      "TableName": "api-tts-pollyPhrases-dev"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "HealthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
                    }
                  },
                  "V1DescriptionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
                    }
                  },
                  "PostLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-PostLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-api-tts-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "health": {
                "handler": "handler.health",
                "events": [
                  {
                    "httpApi": {
                      "path": "/",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/"
                  }
                ],
                "name": "api-tts-dev-health",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
              },
              "v1Description": {
                "handler": "handler.v1_description",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/v1"
                  }
                ],
                "name": "api-tts-dev-v1Description",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
              },
              "post": {
                "handler": "handler.post",
                "events": [
                  {
                    "httpApi": {
                      "path": "/v1/tts",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/v1/tts"
                  }
                ],
                "name": "api-tts-dev-post",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
              }
            },
            "resources": {
              "Resources": {
                "CustomerTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "primary_key",
                        "AttributeType": "S"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "KeySchema": [
                      {
                        "AttributeName": "primary_key",
                        "KeyType": "HASH"
                      }
                    ],
                    "TableName": "api-tts-pollyPhrases-dev"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "dotenv": {
                "path": ".env"
              }
            }
          },
          "configFileDirPath": "E:\\ComputerScience\\Compass\\ProjetoSprint6&7\\sprints-6-7-pb-aws-abril\\api-tts",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "E:\\ComputerScience\\Compass\\ProjetoSprint6&7\\sprints-6-7-pb-aws-abril\\api-tts",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "api-tts",
      "frameworkVersion": "4.1.10",
      "plugins": [
        "serverless-dotenv-plugin"
      ],
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "environment": {
          "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
          "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
          "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
          "S3BUCKETNAME": "audios-sprint-6-7"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:GetItem",
              "dynamodb:Scan",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HealthLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-health"
              }
            },
            "V1DescriptionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
              }
            },
            "PostLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-tts-dev-post"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "api-tts",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:Scan",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "api-tts",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HealthLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                },
                "Handler": "handler.health",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-health",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                    "S3BUCKETNAME": "audios-sprint-6-7"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HealthLogGroup"
              ]
            },
            "V1DescriptionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                },
                "Handler": "handler.v1_description",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-v1Description",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                    "S3BUCKETNAME": "audios-sprint-6-7"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "V1DescriptionLogGroup"
              ]
            },
            "PostLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/api-tts/dev/1720215260705-2024-07-05T21:34:20.705Z/api-tts.zip"
                },
                "Handler": "handler.post",
                "Runtime": "python3.9",
                "FunctionName": "api-tts-dev-post",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_CUSTOMER_TABLE": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLENAME": "api-tts-pollyPhrases-dev",
                    "DYNAMOTABLEARN": "arn:aws:dynamodb:us-east-1:891377158070:table/api-tts-pollyPhrases-dev",
                    "S3BUCKETNAME": "audios-sprint-6-7"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "PostLogGroup"
              ]
            },
            "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HealthLambdaFunction"
                },
                "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
              }
            },
            "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "V1DescriptionLambdaFunction"
                },
                "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
              }
            },
            "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PostLambdaFunction"
                },
                "CodeSha256": "4h/hT3H35JrBFo3qfjzVZSbU5OGYcAnsxEMlkRgk8oA="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-api-tts",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "HealthLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHealth": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGet": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHealth"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHealth"
            },
            "V1DescriptionLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationV1Description": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "V1DescriptionLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetV1": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /v1",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationV1Description"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationV1Description"
            },
            "PostLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PostLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationPost": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "PostLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostV1Tts": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /v1/tts",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationPost"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationPost"
            },
            "CustomerTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "AttributeDefinitions": [
                  {
                    "AttributeName": "primary_key",
                    "AttributeType": "S"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "KeySchema": [
                  {
                    "AttributeName": "primary_key",
                    "KeyType": "HASH"
                  }
                ],
                "TableName": "api-tts-pollyPhrases-dev"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
              }
            },
            "HealthLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
              },
              "Export": {
                "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
              }
            },
            "V1DescriptionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
              },
              "Export": {
                "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
              }
            },
            "PostLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
              },
              "Export": {
                "Name": "sls-api-tts-dev-PostLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-api-tts-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-api-tts-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "health": {
          "handler": "handler.health",
          "events": [
            {
              "httpApi": {
                "path": "/",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/"
            }
          ],
          "name": "api-tts-dev-health",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "HealthLambdaVersionEx7KPIFD18vIMMSg2l1L2Z1qwQCvsRoOoSQd1CwAAE"
        },
        "v1Description": {
          "handler": "handler.v1_description",
          "events": [
            {
              "httpApi": {
                "path": "/v1",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/v1"
            }
          ],
          "name": "api-tts-dev-v1Description",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "V1DescriptionLambdaVersionI59IIqdZgHiQnoFVOfz8WknRqbJSifOzaMZymPpeYY"
        },
        "post": {
          "handler": "handler.post",
          "events": [
            {
              "httpApi": {
                "path": "/v1/tts",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/v1/tts"
            }
          ],
          "name": "api-tts-dev-post",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "PostLambdaVersionoOV6n3IX07mkjo4j7lKMBAHcyDPKR9nXHj7c6BduM"
        }
      },
      "resources": {
        "Resources": {
          "CustomerTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "primary_key",
                  "AttributeType": "S"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "primary_key",
                  "KeyType": "HASH"
                }
              ],
              "TableName": "api-tts-pollyPhrases-dev"
            }
          }
        },
        "Outputs": {}
      },
      "custom": {
        "dotenv": {
          "path": ".env"
        }
      }
    },
    "serviceRawFile": "service: api-tts\r\nframeworkVersion: '4.1.10'\r\n\r\nplugins:\r\n  - serverless-dotenv-plugin\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.9\r\n  region: us-east-1\r\n  environment:\r\n    DYNAMODB_CUSTOMER_TABLE: ${env:DYNAMOTABLENAME}  \r\n\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - 'dynamodb:PutItem'\r\n        - 'dynamodb:GetItem'\r\n        - 'dynamodb:Scan'\r\n        - 'dynamodb:UpdateItem'\r\n        - 'dynamodb:DeleteItem'\r\n      Resource: \r\n        - ${env:DYNAMOTABLEARN}  \r\n\r\nfunctions:\r\n  health:\r\n    handler: handler.health\r\n    events:\r\n      - httpApi:\r\n          path: /\r\n          method: get\r\n  v1Description:\r\n    handler: handler.v1_description\r\n    events:\r\n      - httpApi:\r\n          path: /v1\r\n          method: get\r\n  post:\r\n    handler: handler.post\r\n    events:\r\n      - httpApi:\r\n          path: /v1/tts\r\n          method: post\r\n\r\nresources:\r\n  Resources:\r\n    CustomerTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        AttributeDefinitions:\r\n          - AttributeName: primary_key\r\n            AttributeType: S\r\n        BillingMode: PAY_PER_REQUEST\r\n        KeySchema:\r\n          - AttributeName: primary_key\r\n            KeyType: HASH\r\n        TableName: ${self:service}-pollyPhrases-${sls:stage}  \r\n\r\ncustom:\r\n  dotenv:\r\n    path: .env\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "98579296c8a84216ddb5405fe9d10470",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "28cc9eaa-1dc8-4856-927c-0ae91f5abfe7",
    "orgName": "josejaan",
    "userId": "qHXQHJwM9XWrDpsZ3s",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "josejaan",
    "subscription": null,
    "userEmail": "joseacerbialmeidaneto@hotmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "891377158070",
    "versionSf": "4.1.11",
    "serviceProviderAwsCfStackName": "api-tts-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:891377158070:stack/api-tts-dev/3adcb4b0-3959-11ef-8b52-0e947989e88d",
    "serviceProviderAwsCfStackCreated": "2024-07-03T16:28:07.498Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-05T21:34:27.515Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "PostLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377158070:function:api-tts-dev-post:38",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-PostLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "V1DescriptionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377158070:function:api-tts-dev-v1Description:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HealthLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:891377158070:function:api-tts-dev-health:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "s9uqg4t7c9",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-api-tts-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "api-tts-dev-serverlessdeploymentbucket-0qipbbre5l3k",
        "ExportName": "sls-api-tts-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://s9uqg4t7c9.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-api-tts-dev-HttpApiUrl"
      }
    ]
  }
}